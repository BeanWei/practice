package entrest

// {{ $.Name }} is the model entity for the {{ $.Name }} schema.
type {{ $.Name }} struct {
    {{- range $f := $.Fields }}
        {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
        {{- if $annotation := $f.Annotations.EntREST }}
            {{- if $annotation.Readable }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
            {{- end }}
        {{- else }}
            {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
        {{- end }}
    {{- end }}
}

// Create{{ $.Name }}Request .
type Create{{ $.Name }}Request struct {
    {{- range $f := $.Fields }}
        {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
        {{- if $annotation := $f.Annotations.EntREST }}
            {{- if $annotation.Creatable }}
                {{- if $annotation.Validate}}
                    {{- $tag = printf `%s v:"%s"` $tag $annotation.Validate }}
                {{- end }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
            {{- end }}
        {{- else }}
            {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
        {{- end }}
    {{- end }}
}

// Update{{ $.Name }}Request .
type Update{{ $.Name }}Request struct {
    {{- range $f := $.Fields }}
        {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
        {{- if $annotation := $f.Annotations.EntREST }}
            {{- if $annotation.Updatable }}
                {{- if $annotation.Validate}}
                    {{- $tag = printf `%s v:"%s"` $tag $annotation.Validate }}
                {{- end }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
            {{- end }}
        {{- else }}
            {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}`json:"-"`{{ end }}
        {{- end }}
    {{- end }}
}

// Delete{{ $.Name }}Request .
type Delete{{ $.Name }}Request struct {
    ID {{ $.ID.Type }} {{ with $.Annotations.Fields.StructTag.id }}`{{ . }}`{{ else }}`{{ $.ID.StructTag }}`{{ end }}
}

// Get{{ $.Name }}Request .
type Get{{ $.Name }}Request struct {
    ID {{ $.ID.Type }} {{ with $.Annotations.Fields.StructTag.id }}`{{ . }}`{{ else }}`{{ $.ID.StructTag }}`{{ end }}
}

// List{{ $.Name }}Request .
type ListPetRequest struct {
    PageSize int    `json:"pageSize,omitempty"`
    PageNum  int    `json:"pageNum,omitempty"`
    Sort     string `json:"sort,omitempty"`
}
