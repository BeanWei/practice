{{ define "debug/debug" }}

{{- with extend $ "Package" "debug" -}}
	{{ template "header" . }}
{{ end }}

{{ range $n := $.Nodes }}
    // {{ $n.Name }} is the model entity for the {{ $n.Name }} schema.
    type {{ $n.Name }} struct {
        {{- range $f := $n.Fields }}
            {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
            {{- template "model/fieldcomment" $f }}
            {{- if $annotation := $f.Annotations.EntREST }}
                {{- if $annotation.Readable }}
                    {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
                {{- end }}
            {{- else }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
            {{- end }}
        {{- end }}
    }

    // Create{{ $n.Name }}Request .
    type Create{{ $n.Name }}Request struct {
        {{- range $f := $n.Fields }}
            {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
            {{- if $annotation := $f.Annotations.EntREST }}
                {{- if $annotation.Creatable }}
                    {{- if $annotation.Validate}}
                        {{- $tag = printf `%s v:"%s"` $tag $annotation.Validate }}
                    {{- end }}
                    {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
                {{- end }}
            {{- else }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
            {{- end }}
        {{- end }}
    }

    // Update{{ $n.Name }}Request .
    type Update{{ $n.Name }}Request struct {
        {{- range $f := $n.Fields }}
            {{- $tag := $f.StructTag }}{{ with $tags := $.Annotations.Fields.StructTag }}{{ with index $tags $f.Name }}{{ $tag = . }}{{ end }}{{ end }}
            {{- if $annotation := $f.Annotations.EntREST }}
                {{- if $annotation.Updatable }}
                    {{- if $annotation.Validate}}
                        {{- $tag = printf `%s v:"%s"` $tag $annotation.Validate }}
                    {{- end }}
                    {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
                {{- end }}
            {{- else }}
                {{ $f.StructField }} {{ if $f.NillableValue }}*{{ end }}{{ $f.Type }} {{ if not $f.Sensitive }}`{{ $tag }}`{{ else }}{{ template "model/omittags" $ }}{{ end }}
            {{- end }}
        {{- end }}
    }

    // Delete{{ $n.Name }}Request .
    type Delete{{ $n.Name }}Request struct {
        ID {{ $n.ID.Type }} {{ with $n.Annotations.Fields.StructTag.id }}`{{ . }}`{{ else }}`{{ $n.ID.StructTag }}`{{ end }}
    }

    // Get{{ $n.Name }}Request .
    type Get{{ $n.Name }}Request struct {
        ID {{ $n.ID.Type }} {{ with $n.Annotations.Fields.StructTag.id }}`{{ . }}`{{ else }}`{{ $n.ID.StructTag }}`{{ end }}
    }

    // List{{ $n.Name }}Request .
    type ListPetRequest struct {
        PageSize int    `json:"pageSize,omitempty"`
        PageNum  int    `json:"pageNum,omitempty"`
        Sort     string `json:"sort,omitempty"`
    }

{{ end }}

{{ end }}